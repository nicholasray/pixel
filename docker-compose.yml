version: "3.8"

volumes:
  dbdata:
  mwcode:
services:
  mediawiki:
    build:
      context: .
      dockerfile: Dockerfile.mediawiki
      args:
        - CLONE_DEPTH=${CLONE_DEPTH}
    env_file:
      - .env
    environment:
      - COMPOSER_CACHE_DIR=/var/www/html/w/cache/composer
      - XDEBUG_CONFIG=
      - XDEBUG_ENABLE=false
      - XHPROF_ENABLE=false
      - ENABLE_WIKILAMBDA=${ENABLE_WIKILAMBDA}
    volumes:
      - mwcode:/var/www/html/w
      - ./LocalSettings.php:/var/www/html/w/LocalSettings.php
      - ./src:/src
    depends_on:
      database:
        condition: service_healthy
  mediawiki-web:
    image: docker-registry.wikimedia.org/dev/buster-apache2:2.0.0-s1
    ports:
      - "${PIXEL_MW_DOCKER_PORT}:8080"
    env_file:
      - .env
    environment:
      - XDEBUG_CONFIG=
      - XDEBUG_ENABLE=false
      - XHPROF_ENABLE=false
    volumes:
      - mwcode:/var/www/html/w
    depends_on:
      database:
        condition: service_healthy
  database:
    build:
      context: .
      dockerfile: Dockerfile.database
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - dbdata:/var/lib/mysql
      - ./src/seedDb.sh:/docker-entrypoint-initdb.d/seedDb.sh
    healthcheck:
      test: [ CMD, mysql, my_wiki, -e, status ]
      interval: 1s
      timeout: 5s
      retries: 20
  visual-regression:
    init: true
    network_mode: host
    build:
      context: .
      dockerfile: Dockerfile.visual-regression
      args:
        - BACKSTOPJS_VERSION=6.2.2
    working_dir: /pixel
    env_file:
      - .env
    volumes:
      - ./context.json:/pixel/context.json
      - ./viewports.js:/pixel/viewports.js
      - ./utils.js:/pixel/utils.js
      - ./config:/pixel/config
      - ./src:/pixel/src
      - ./report:/pixel/report
  a11y-regression:
    init: true
    network_mode: host
    build:
      context: .
      dockerfile: Dockerfile.a11y-regression
      args:
        - PA11Y_VERSION=7.0.0
    working_dir: /pixel
    env_file:
      - .env
    volumes:
      - ./context.json:/pixel/context.json
      - ./viewports.js:/pixel/viewports.js
      - ./utils.js:/pixel/utils.js
      - ./config:/pixel/config
      - ./src:/pixel/src
      - ./report:/pixel/report
  png-optimizer:
    build:
      context: .
      dockerfile: Dockerfile.optimizePNG
    volumes:
      - ./report:/pixel/report
      - ./optimizePNG.sh:/opt/scripts/optimizePNG.sh
      - ./optimizePNG_supervisord.conf:/etc/optimizePNG_supervisord.conf
    working_dir: /pixel/report
